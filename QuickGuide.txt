*********************************************************************************
*
*	File API CLI Quick Guide. 
*
*********************************************************************************

1. Download -> git clone https://github.com/myNBGcode/FileAPI_Cli_V5.git
2. In case you are using Windows x64 (other options are possible) use the .\selfcontained_readytorun_win-x64_build folder
3. In case you want to use sandbox File Api and TPP payments:
    a.	Go to the development portal and create a client (app), subscribe it to the https://developer.nbg.gr/apiProduct/File-Management-Platform
    b.	Ask from your nbg contact to 
        i.   add cli flow on this client with encryption property 
        ii.  add prefix claims
        iii. remove ids restriction
    c.	Get a token and Create a sandbox for the File Management Api from the development portal. Store the sandbox id to use it on the next step
    d.	Edit appsettings.json  
        i. Change any "THE_xxxx" with your personal settings. For example for sandbox "acr_values": "THE_ACR_VALUES", must be changed to "acr_values": "provider:1",
           as is stated on the api documentation and all “apis urls” must have the same value https://apis.nbg.gr/sandbox/file/oauth2/v5
    e.	Now you can run example commands described on https://developer.nbg.gr/apiProduct/File-Management-Platform
4. Sandbox will not do any advanced validations, is more a tool to test connectivity with nbg, to create your algorithm and your types
5. Some notes for the organization’s payments TPP:
    a. Payment cli command will store results in a json under name MassPaymentResponse_*
    b. To see available Types of production payments before you implement the actual production app you can read
       https://github.com/myNBGcode/FileAPI_Cli_V5/tree/main/Documentation/Mass%20Bill%20Payments/mass_bill_payment_samples/masspaymentsample_command_samples.
       Βe aware you will find only static files so you must crosscheck your payments on the production implementation through the template call
    c. Available Types of payments will change over time so you must implement a mechanism to track changes on the template
    d. Payments will run asynchronous on production so you must ask for the outcome with an interval for example every 2 or 24 hours until you get a valid response
